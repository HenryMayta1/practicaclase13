{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RickAndMortyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://rickandmortyapi.com/api/character';\n  }\n  getPersonajes() {\n    return this.http.get(this.apiUrl);\n  }\n  static {\n    this.ɵfac = function RickAndMortyService_Factory(t) {\n      return new (t || RickAndMortyService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: RickAndMortyService,\n      factory: RickAndMortyService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["RickAndMortyService","constructor","http","apiUrl","getPersonajes","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\MV\\clase-prueba\\src\\app\\services\\rick-and-morty.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RickAndMortyService {\r\n  private apiUrl = 'https://rickandmortyapi.com/api/character';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getPersonajes(): Observable<any> {\r\n    return this.http.get<any>(this.apiUrl);\r\n  }\r\n}\r\n"],"mappings":";;AAOA,OAAM,MAAOA,mBAAmB;EAG9BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,2CAA2C;EAErB;EAEvCC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAM,IAAI,CAACF,MAAM,CAAC;EACxC;;;uBAPWH,mBAAmB,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAnBT,mBAAmB;MAAAU,OAAA,EAAnBV,mBAAmB,CAAAW,IAAA;MAAAC,UAAA,EAFlB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}